// Code generated by protoc-gen-go. DO NOT EDIT.
// source: loginUser.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginInfo struct {
	UserNameInfo         *string  `protobuf:"bytes,1,req,name=userNameInfo" json:"userNameInfo,omitempty"`
	Pwd                  *string  `protobuf:"bytes,2,req,name=pwd" json:"pwd,omitempty"`
	Token                *string  `protobuf:"bytes,3,req,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginInfo) Reset()         { *m = LoginInfo{} }
func (m *LoginInfo) String() string { return proto.CompactTextString(m) }
func (*LoginInfo) ProtoMessage()    {}
func (*LoginInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_243e35b2fe47871f, []int{0}
}

func (m *LoginInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginInfo.Unmarshal(m, b)
}
func (m *LoginInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginInfo.Marshal(b, m, deterministic)
}
func (m *LoginInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginInfo.Merge(m, src)
}
func (m *LoginInfo) XXX_Size() int {
	return xxx_messageInfo_LoginInfo.Size(m)
}
func (m *LoginInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LoginInfo proto.InternalMessageInfo

func (m *LoginInfo) GetUserNameInfo() string {
	if m != nil && m.UserNameInfo != nil {
		return *m.UserNameInfo
	}
	return ""
}

func (m *LoginInfo) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *LoginInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type LoginResp struct {
	Status               *bool        `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
	ProfileInfo          *ProfileInfo `protobuf:"bytes,2,req,name=profileInfo" json:"profileInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LoginResp) Reset()         { *m = LoginResp{} }
func (m *LoginResp) String() string { return proto.CompactTextString(m) }
func (*LoginResp) ProtoMessage()    {}
func (*LoginResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_243e35b2fe47871f, []int{1}
}

func (m *LoginResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResp.Unmarshal(m, b)
}
func (m *LoginResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResp.Marshal(b, m, deterministic)
}
func (m *LoginResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResp.Merge(m, src)
}
func (m *LoginResp) XXX_Size() int {
	return xxx_messageInfo_LoginResp.Size(m)
}
func (m *LoginResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResp.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResp proto.InternalMessageInfo

func (m *LoginResp) GetStatus() bool {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return false
}

func (m *LoginResp) GetProfileInfo() *ProfileInfo {
	if m != nil {
		return m.ProfileInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginInfo)(nil), "protobuf.LoginInfo")
	proto.RegisterType((*LoginResp)(nil), "protobuf.LoginResp")
}

func init() { proto.RegisterFile("loginUser.proto", fileDescriptor_243e35b2fe47871f) }

var fileDescriptor_243e35b2fe47871f = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xc9, 0x4f, 0xcf,
	0xcc, 0x0b, 0x2d, 0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49,
	0xa5, 0x69, 0x52, 0xbc, 0x05, 0x45, 0xf9, 0x69, 0x99, 0x39, 0xa9, 0x10, 0x09, 0xa5, 0x70, 0x2e,
	0x4e, 0x1f, 0x90, 0x5a, 0xcf, 0xbc, 0xb4, 0x7c, 0x21, 0x25, 0x2e, 0x9e, 0xd2, 0xe2, 0xd4, 0x22,
	0xbf, 0xc4, 0xdc, 0x54, 0x10, 0x5f, 0x82, 0x51, 0x81, 0x49, 0x83, 0x33, 0x08, 0x45, 0x4c, 0x48,
	0x80, 0x8b, 0xb9, 0xa0, 0x3c, 0x45, 0x82, 0x09, 0x2c, 0x05, 0x62, 0x0a, 0x89, 0x70, 0xb1, 0x96,
	0xe4, 0x67, 0xa7, 0xe6, 0x49, 0x30, 0x83, 0xc5, 0x20, 0x1c, 0xa5, 0x18, 0xa8, 0xc1, 0x41, 0xa9,
	0xc5, 0x05, 0x42, 0x62, 0x5c, 0x6c, 0xc5, 0x25, 0x89, 0x25, 0xa5, 0xc5, 0x60, 0x23, 0x39, 0x82,
	0xa0, 0x3c, 0x21, 0x73, 0x2e, 0x6e, 0xa8, 0x73, 0xc0, 0xf6, 0x81, 0x0c, 0xe5, 0x36, 0x12, 0xd5,
	0x83, 0x39, 0x56, 0x2f, 0x00, 0x21, 0x19, 0x84, 0xac, 0xd2, 0x68, 0x02, 0x23, 0x97, 0x80, 0x0f,
	0xcc, 0x8f, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x36, 0x48, 0x62, 0xe1, 0x99, 0x25,
	0x19, 0x01, 0xe1, 0x2e, 0x42, 0xc2, 0x08, 0xc3, 0xe0, 0xfe, 0x94, 0x42, 0x17, 0x04, 0xbb, 0xd1,
	0x8e, 0x4b, 0x08, 0x45, 0x77, 0x08, 0xc8, 0x1b, 0xc4, 0xeb, 0x07, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xf9, 0x42, 0x33, 0x17, 0x74, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoginUserServiceClient is the client API for LoginUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoginUserServiceClient interface {
	LoginUserWithPWD(ctx context.Context, in *LoginInfo, opts ...grpc.CallOption) (*LoginResp, error)
	LoginUserWithToken(ctx context.Context, in *LoginInfo, opts ...grpc.CallOption) (*LoginResp, error)
}

type loginUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewLoginUserServiceClient(cc *grpc.ClientConn) LoginUserServiceClient {
	return &loginUserServiceClient{cc}
}

func (c *loginUserServiceClient) LoginUserWithPWD(ctx context.Context, in *LoginInfo, opts ...grpc.CallOption) (*LoginResp, error) {
	out := new(LoginResp)
	err := c.cc.Invoke(ctx, "/protobuf.LoginUserService/LoginUserWithPWD", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loginUserServiceClient) LoginUserWithToken(ctx context.Context, in *LoginInfo, opts ...grpc.CallOption) (*LoginResp, error) {
	out := new(LoginResp)
	err := c.cc.Invoke(ctx, "/protobuf.LoginUserService/LoginUserWithToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoginUserServiceServer is the server API for LoginUserService service.
type LoginUserServiceServer interface {
	LoginUserWithPWD(context.Context, *LoginInfo) (*LoginResp, error)
	LoginUserWithToken(context.Context, *LoginInfo) (*LoginResp, error)
}

// UnimplementedLoginUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLoginUserServiceServer struct {
}

func (*UnimplementedLoginUserServiceServer) LoginUserWithPWD(ctx context.Context, req *LoginInfo) (*LoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUserWithPWD not implemented")
}
func (*UnimplementedLoginUserServiceServer) LoginUserWithToken(ctx context.Context, req *LoginInfo) (*LoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUserWithToken not implemented")
}

func RegisterLoginUserServiceServer(s *grpc.Server, srv LoginUserServiceServer) {
	s.RegisterService(&_LoginUserService_serviceDesc, srv)
}

func _LoginUserService_LoginUserWithPWD_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginUserServiceServer).LoginUserWithPWD(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.LoginUserService/LoginUserWithPWD",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginUserServiceServer).LoginUserWithPWD(ctx, req.(*LoginInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoginUserService_LoginUserWithToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginUserServiceServer).LoginUserWithToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.LoginUserService/LoginUserWithToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginUserServiceServer).LoginUserWithToken(ctx, req.(*LoginInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoginUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.LoginUserService",
	HandlerType: (*LoginUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginUserWithPWD",
			Handler:    _LoginUserService_LoginUserWithPWD_Handler,
		},
		{
			MethodName: "LoginUserWithToken",
			Handler:    _LoginUserService_LoginUserWithToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "loginUser.proto",
}
